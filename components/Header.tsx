"use client"

import Link from "next/link"

import { useEffect, useState } from "react"
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome"
import { faBars, faXmark } from "@fortawesome/free-solid-svg-icons"

import GoToTopBtn from "./GoToTopBtn"
import "../styles/header.css"

const Header = () => {
  const [showSidebar, setShowSidebar] = useState(false)
  const [windowSize, setWindowSize] = useState(0)
  const largeScreen = 1024

  const menuLinks = ["Company", "About us", "Jobs", "Contact"]
  const sidebarLinks = ["Company", "About us", "Jobs", "Contact"]

  // check current screen size and close sidebar in large screen
  useEffect(() => {
    const handleResize = () => setWindowSize(window.innerWidth)
    window.addEventListener("resize", handleResize)

    if (windowSize > largeScreen) setShowSidebar(false)

    // remove o event listener do resize para evitar memory leaks
    return () => window.removeEventListener("resize", handleResize)
  }, [windowSize])

  return (
    <header>
      <div className="container-md flex items-center justify-between">
        <svg
          className="navbar-logo"
          width="65"
          height="65"
          viewBox="0 0 75 84"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M47.8571 55.5217C49.4697 52.5986 50.5801 49.4254 51.1419 46.1345C52.4279 38.5006 51.0396 32.6916 45.7013 24.4334C42.6313 19.6579 38.4016 15.742 34.8064 11.3384C32.6131 8.65387 30.7404 5.47818 29.9047 2.15581C33.5299 0.755244 37.3806 0.0292618 41.2669 0.0136719H41.3863C44.5586 0.0157139 47.6497 1.01651 50.2212 2.87412C52.7927 4.73172 54.714 7.35183 55.7127 10.3628C63.7492 34.496 54.9623 48.6587 47.8571 55.5217Z"
            fill="#CCCCCC"></path>
          <path
            d="M45.2681 32.9883C48.4813 41.3453 47.8093 53.6013 37.4227 63.0908C37.8232 59.9163 37.3967 56.6921 36.1844 53.7309C33.6296 47.475 26.4902 41.3078 20.6539 34.3766C12.4367 24.6141 15.2133 9.69078 26.4902 3.71461L26.8859 3.50995C29.1815 13.8454 40.7825 21.3191 45.2681 32.9883Z"
            fill="#CCCCCC"></path>
          <path
            d="M62.3131 36.4198C63.9539 26.1184 62.7429 14.3844 58.2472 4.79932C64.1236 8.43736 68.6623 13.8824 71.1826 20.3179C73.7029 26.7535 74.069 33.8326 72.226 40.4938C70.3829 47.1549 66.4301 53.0391 60.9603 57.2639C55.4905 61.4887 48.7985 63.8264 41.8878 63.9265C53.1442 58.5575 60.4132 48.3448 62.3131 36.4198Z"
            fill="#CCCCCC"></path>
          <path
            d="M11.004 22.1445C15.2337 38.289 36.0616 50.3437 34.6358 63.2102C30.2758 62.26 26.1629 60.408 22.5614 57.7733C18.9599 55.1386 15.9496 51.7794 13.7239 47.9118C11.4982 44.0441 10.1064 39.7536 9.63799 35.3159C9.16957 30.8782 9.63489 26.3916 11.004 22.1445Z"
            fill="#CCCCCC"></path>
          <path
            d="M62.3131 36.4198C63.9539 26.1184 62.7429 14.3844 58.2472 4.79932C62.8549 7.64987 66.6617 11.6258 69.3094 16.3531C71.9571 21.0804 73.3586 26.4035 73.382 31.8217C73.382 32.5744 73.3581 33.3225 73.3104 34.0662C69.86 37.3337 65.7295 39.7974 61.2148 41.2805C61.6856 39.6857 62.0525 38.0621 62.3131 36.4198Z"
            fill="white"></path>
          <path
            d="M41.3863 0.0136445C44.5586 0.0156865 47.6497 1.01649 50.2212 2.87409C52.7927 4.7317 54.7141 7.3518 55.7127 10.3628C60.3074 24.14 59.4137 34.6665 56.4836 42.4267C54.8506 42.6958 53.1994 42.8407 51.5444 42.8599C51.9469 36.72 50.2687 31.4635 45.715 24.4197C42.645 19.6443 38.4153 15.7284 34.82 11.3247C32.6267 8.6402 30.7541 5.46451 29.9184 2.14214C33.5436 0.741573 37.3943 0.0155899 41.2806 0L41.3863 0.0136445Z"
            fill="white"></path>
          <path
            d="M18.945 10.8028V10.7209C20.7933 7.75937 23.3947 5.34159 26.4834 3.71461L26.8791 3.50995C29.1816 13.8557 40.7826 21.3191 45.2681 32.9883C46.4347 36.0582 47.0133 39.3202 46.9736 42.604C39.2467 41.5872 32.1498 37.8055 26.9967 31.9587C21.8435 26.112 18.9831 18.5962 18.945 10.8028Z"
            fill="white"></path>
          <path
            d="M5.48159 17.7306C8.50898 17.7306 10.9632 15.2765 10.9632 12.2491C10.9632 9.2217 8.50898 6.76752 5.48159 6.76752C2.45421 6.76752 3.05176e-05 9.2217 3.05176e-05 12.2491C3.05176e-05 15.2765 2.45421 17.7306 5.48159 17.7306Z"
            fill="white"></path>
          <path
            d="M14.1695 75.8073H20.3094V76.295C20.3256 77.2959 20.1934 78.2937 19.9172 79.2558C19.6442 80.0809 19.2015 80.8396 18.6176 81.4833C17.9681 82.2358 17.1598 82.8349 16.2508 83.2372C15.3418 83.6395 14.3548 83.835 13.3611 83.8096C12.3656 83.8221 11.3782 83.6289 10.4608 83.2421C9.54336 82.8553 8.7157 82.2832 8.02965 81.5617C6.96237 80.4749 6.24017 79.0968 5.95382 77.6007C5.66747 76.1047 5.82975 74.5573 6.42027 73.1532C7.01079 71.7491 8.00319 70.5508 9.27273 69.7091C10.5423 68.8674 12.0323 68.4197 13.5556 68.4223C14.6773 68.4139 15.7868 68.6563 16.8029 69.1318C17.8899 69.707 18.8531 70.4905 19.6375 71.4377L18.0411 72.9659C16.8245 71.3467 15.3464 70.536 13.6067 70.5338C12.8719 70.5171 12.1416 70.6528 11.4618 70.9322C10.782 71.2117 10.1674 71.6288 9.65672 72.1574C9.13249 72.6798 8.72072 73.304 8.44676 73.9916C8.17281 74.6791 8.04246 75.4154 8.06376 76.1552C8.06448 77.5972 8.62373 78.9829 9.62414 80.0215C10.6246 81.0601 11.9884 81.6708 13.4293 81.7254C14.5226 81.7284 15.5792 81.3317 16.4004 80.61C16.8113 80.282 17.1527 79.8754 17.4046 79.4138C17.6564 78.9523 17.8137 78.4452 17.8671 77.9221H16.2742C15.716 77.9221 15.1807 77.7004 14.786 77.3057C14.3913 76.911 14.1695 76.3757 14.1695 75.8175V75.8073Z"
            fill="white"></path>
          <path
            d="M22.9564 74.1734H24.2833C24.505 74.1734 24.7175 74.2614 24.8743 74.4182C25.031 74.5749 25.119 74.7874 25.119 75.0091C25.4216 74.6671 25.779 74.3777 26.1765 74.1529C26.5239 73.9857 26.9064 73.9038 27.2919 73.9141C27.9261 73.9332 28.5431 74.1254 29.0759 74.4701L28.0866 76.4486C27.7437 76.1774 27.3229 76.0232 26.886 76.0085C25.708 76.0085 25.119 76.8988 25.119 78.6794V83.5299H22.9564V74.1734Z"
            fill="white"></path>
          <path
            d="M30.1503 78.2632C30.2138 77.4137 30.5271 76.6019 31.0508 75.93C31.488 75.3556 32.0418 74.8803 32.6758 74.5351C33.3098 74.19 34.0096 73.9829 34.7294 73.9275C35.4491 73.8721 36.1724 73.9696 36.8517 74.2136C37.5311 74.4576 38.1511 74.8426 38.6711 75.3433C39.5987 76.2808 40.119 77.5464 40.119 78.8652C40.119 80.1841 39.5987 81.4496 38.6711 82.3871C38.1986 82.8497 37.6382 83.2129 37.0231 83.4555C36.408 83.698 35.7505 83.8149 35.0895 83.7993C34.4343 83.8142 33.783 83.6941 33.1762 83.4465C32.5694 83.1989 32.0201 82.829 31.5625 82.3598C30.4868 81.3001 30.0161 79.9346 30.1503 78.2632ZM32.3402 78.8226C32.2959 79.6317 32.5646 80.4268 33.0906 81.0432C33.6339 81.5692 34.3605 81.8633 35.1168 81.8633C35.873 81.8633 36.5996 81.5692 37.1429 81.0432C37.6358 80.4229 37.904 79.654 37.904 78.8618C37.904 78.0696 37.6358 77.3007 37.1429 76.6804C36.6059 76.1491 35.8808 75.851 35.1253 75.851C34.3698 75.851 33.6447 76.1491 33.1077 76.6804C32.5797 77.2658 32.3028 78.0351 32.3368 78.8226H32.3402Z"
            fill="white"></path>
          <path
            d="M41.8673 78.2598C41.9328 77.4117 42.2459 76.6016 42.7678 75.93C43.205 75.3551 43.7589 74.8792 44.3932 74.5338C45.0275 74.1883 45.7278 73.981 46.4479 73.9256C47.1681 73.8702 47.8918 73.9679 48.5715 74.2122C49.2512 74.4566 49.8715 74.8421 50.3915 75.3433C51.3174 76.2817 51.8366 77.5469 51.8366 78.8652C51.8366 80.1835 51.3174 81.4488 50.3915 82.3871C49.9183 82.8498 49.3574 83.2131 48.7417 83.4556C48.126 83.6981 47.468 83.815 46.8065 83.7993C46.1513 83.8142 45.5 83.6942 44.8932 83.4465C44.2864 83.1989 43.7371 82.829 43.2794 82.3598C42.2129 81.3001 41.7422 79.9335 41.8673 78.2598ZM44.0572 78.8226C44.0143 79.6315 44.2828 80.4261 44.8076 81.0432C45.3515 81.5694 46.0787 81.8636 46.8355 81.8636C47.5923 81.8636 48.3194 81.5694 48.8633 81.0432C49.3538 80.4219 49.6207 79.6534 49.6207 78.8618C49.6207 78.0702 49.3538 77.3017 48.8633 76.6805C48.6044 76.4046 48.2891 76.1878 47.9389 76.0448C47.5887 75.9017 47.2117 75.8358 46.8337 75.8516C46.4595 75.8375 46.0866 75.9043 45.7405 76.0473C45.3944 76.1903 45.0832 76.4063 44.828 76.6805C44.2991 77.2652 44.0221 78.0349 44.0572 78.8226Z"
            fill="white"></path>
          <path
            d="M55.532 74.9272L57.4353 79.058C57.4503 79.0906 57.4743 79.1183 57.5046 79.1377C57.5348 79.1571 57.57 79.1674 57.6059 79.1674C57.6418 79.1674 57.677 79.1571 57.7072 79.1377C57.7374 79.1183 57.7615 79.0906 57.7764 79.058L59.673 74.9272C59.7766 74.7022 59.9425 74.5117 60.1511 74.3781C60.3596 74.2445 60.6021 74.1734 60.8498 74.1733H62.4496L58.1926 82.9329C58.1344 83.0421 58.0477 83.1334 57.9416 83.197C57.8356 83.2607 57.7142 83.2943 57.5905 83.2943C57.4668 83.2943 57.3455 83.2607 57.2394 83.197C57.1334 83.1334 57.0466 83.0421 56.9885 82.9329L52.7656 74.1733H54.3551C54.6029 74.173 54.8456 74.2439 55.0542 74.3775C55.2628 74.5112 55.4287 74.702 55.532 74.9272Z"
            fill="white"></path>
          <path
            d="M64.3734 70.2813C64.3718 70.0921 64.4101 69.9046 64.4859 69.7312C64.5618 69.5578 64.6734 69.4023 64.8134 69.2751C65.0793 69.0234 65.4328 68.8851 65.7989 68.8896C66.1651 68.894 66.515 69.0409 66.7748 69.2989C66.9088 69.4266 67.0148 69.5808 67.0859 69.7517C67.1569 69.9226 67.1916 70.1065 67.1875 70.2915C67.1905 70.4775 67.1554 70.662 67.0844 70.8339C67.0134 71.0058 66.908 71.1613 66.7748 71.291C66.606 71.4626 66.396 71.5879 66.1648 71.6549C65.9335 71.7218 65.689 71.728 65.4547 71.673C65.313 71.648 65.1782 71.5934 65.059 71.5127C64.8476 71.3847 64.6732 71.2038 64.553 70.9879C64.4327 70.772 64.3709 70.5284 64.3734 70.2813ZM66.86 76.3325V83.5299H64.6974V74.1733C64.9813 74.1729 65.2624 74.2284 65.5248 74.3367C65.7871 74.445 66.0256 74.604 66.2264 74.8045C66.4273 75.0051 66.5866 75.2433 66.6954 75.5054C66.8041 75.7676 66.86 76.0487 66.86 76.3325Z"
            fill="white"></path>
          <path
            d="M72.8123 76.1893V83.5299H70.6497V76.1893H68.76V74.1733H70.6497V70.7418C71.2233 70.7418 71.7733 70.9697 72.1789 71.3752C72.5845 71.7808 72.8123 72.3309 72.8123 72.9044V74.1733H74.494V76.1893H72.8123Z"
            fill="white"></path>
        </svg>
        <nav>
          <ul className={`sidebar ${showSidebar ? "flex flex-col" : "hidden"}`}>
            <li>
              <Link onClick={() => setShowSidebar(false)} href="">
                <FontAwesomeIcon icon={faXmark} size="2x" />
              </Link>
            </li>
            {sidebarLinks.map(link => {
              return (
                <li key={link}>
                  <Link href="">{link}</Link>
                </li>
              )
            })}
          </ul>

          <ul className="flex gap-8">
            {menuLinks.map(link => {
              return (
                <li key={link} className="hideOnMobile">
                  <Link href="">{link}</Link>
                </li>
              )
            })}
            <li className="open-menu-icon" onClick={() => setShowSidebar(true)}>
              <FontAwesomeIcon icon={faBars} size="2x" />
            </li>
          </ul>
        </nav>
      </div>
      <GoToTopBtn />
    </header>
  )
}

export default Header
